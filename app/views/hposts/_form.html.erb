<head>
  <!-- ajax -->
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js"></script>
   <!--이미지 변환/저장 -->
  <script src="https://files.codepedia.info/files/uploads/iScripts/html2canvas.js"></script> 
  <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
  <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

  <!-- 폰트 색상 script--> 
  <script src="/assets/jscolor.js"></script>  
  
  <script>

  //이미지저장 + 실시간입력
  $(document).ready(function(){

    //<!-- div 이미지로 변환 및 저장 script-->
    var element = $("#html-content-holder"); // global variable
    var getCanvas; // global variable
          html2canvas(element, {
             onrendered: function (canvas) {
                    $("#html_content_holder").append(canvas);
                    getCanvas = canvas;
                 }
             });
             
    	$("#btn-Convert-Html2Image").on('click', function () {
        var imageData = getCanvas.toDataURL("image/png");
        // Now browser starts downloading it instead of just showing it
        var newData = imageData.replace(/^data:image\/png/, "data:application/octet-stream");
        $("#btn-Convert-Html2Image").attr("download", "your_pic_name.png").attr("href", newData);
    	});


      //<!-- 실시간으로 input 값이 입력 되는 script -->
      
        $('#title').keyup(function (){
        $('#pt_title' , "div" ).empty();
        $('#pt_title').append("<div>"+document.getElementById("title").value+"</div>")});
        
        $('#detail').keyup(function (){
        $('#pt_detail' , "div" ).empty();
        $('#pt_detail').append("<div>"+document.getElementById("detail").value+"</div>")});
        
        $('#address').keyup(function (){
        $('#pt_address' , "div" ).empty();
        $('#pt_address').append("<div>"+document.getElementById("address").value+"</div>")});
    // ?
        $("#hpost_picture").change(function(){
          $('#submit_poster').trigger('click');
        });
   });  //이미지저장 끄읏
  
  
    //폰트설정
       function editOption() {
        
        var el = document.getElementsByClassName('select');
        var style = window.getComputedStyle(el[0], null).getPropertyValue('font-size');
        var size = parseFloat(style); 

         var select=$("div.select");
         
          // 글자 크기의 버튼들을 클릭했을 때
          $(".zoom button").on("click",function(){
              var btn_index=$(this).val();  //클릭한 버튼의 인덱스 반환
              // alert("123");
              if(btn_index=="btn_plus"){ //"+"를 클릭했을 경우
                 size++; //size가 1씩 증가
                 select.css("font-size",size+"px"); //글자 크기 속성이 변경됨. 
              }else if(btn_index=="btn_minus"){ //"-"를 클릭했을 경우
                 size--; //size가 1씩 감소
                 select.css("font-size",size+"px"); //글자 크기 속성이 변경됨.
              }else if(btn_index=="btn_default"){ //"0"를 클릭했을 경우
                 size=12; //디폴트로 다시 세팅
                 select.css("font-size","12px"); //글자 크기 속성이 12px로 변경됨.
              }
              $("#lbl_fontsize").text(size); //글자크기 출력
          });
    
    
          // 글자 모양을 선택했을 때 (폰트 변경)
          $("#fs").on("change",function(){
            select.css("font-family",$(this).val()); //글자 모양 변경
          });
          
          // 색상
      };

// 생각생각을 해봅시다!!
// 그니까 지금 하려는게 
// 클릭 시 -> 아래 하단에 띄우기
// 하단에 띄우는 것은 bottom 인데
// 이 때 클릭시에 bottom 내부에 render (option.render)가 들어가게 하는 것!!! 이렇게 해야 오류가 안난다고ㅠㅠㅠ히우ㅜㅎ잏이
// 그리고 이 div에 마우스를 올리면,
// class에 select를 추가해서 요소변경할 수 있도록 연결하는데
// 여기서 지금은 폰트만 되고 / 색은 안됨 (아마 changeEdit 함수 건드려야 하지 않나 생각중)


//그냥 함수 만드는게 답인것같아염 함수에 입력변수값 + 스크립트 + 클래스 막 다 연결해서 슝슝 ㅎ,ㅎ...

  $(document).ready(function(){
      $('.top').on('click', function() {                       //top은 input에 공동으로 준 class
      	$parent_box = $(this).closest('.box');                 // 가장 위 ? 부모? 가장 가까운 부모가 box인 걸로 접근 / input 상단의 div에 'box'클래스를 공동으로 줌
      	$parent_box.siblings().find('.bottom').slideUp();     // box 자식요소인 bottom! SlideUp은 약간 애니메이션?액션? 느낌
      	$parent_box.find('.bottom').slideToggle(1000, 'swing'); //구래서 이렇게 하면 ! 세 input중 하나만 선택가능하게 됨니당ㅎ.ㅎ
        
      //   if ($('.numb1 .top').slideDown())
      //   {
      //     $("#pt_detail").removeClass('select');
      //     $("#pt_title").addClass('select');
      //     $("#pt_address").removeClass('select');
      //     editOption(); 
      //   }      
      //   if ($('.numb2 .bottom').slideDown())
      //   {
      //     $("#pt_detail").addClass('select');
      //     $("#pt_title").removeClass('select');
      //     $("#pt_address").removeClass('select');
      //     editOption(); 
      //   }
      //   if ($('.numb3 .bottom').slideDown())
      //   {
          
      //     $("#pt_detail").removeClass('select');
      //     $("#pt_title").removeClass('select');
      //     $("#pt_address").addClass('select');
      //     editOption(); 
      //   }
      });
      
       $('.numb1 .bottom').hover(                                        //bottom은 아래 생기는 흰 박스 (내부에는 그 폰트변경요소들) + 마우스 오버 되면
          function(){$("#pt_title").addClass('select');
                   //select가 추가됨 (이 때, 첫번째bottom- pt_tile / 두번째-pt_detail) 연결해야하는데 얘도   
                                                                    //1)함수로 만들면 입력변수로 조절 2)부모자식요소로 접근 (위에처럼)  3)세개! 수작업 헤헤
                    editOption();                                    // editOption은 걍 위에 그 어제 해논 함수명 바꿔가지고 ! 그거 실행됨
                    },             
          function(){$("#pt_title").removeClass('select'); }                 //  마우스아웃 때, select 제거! 
      ); 
      
       $('.numb2 .bottom').hover(                                        //bottom은 아래 생기는 흰 박스 (내부에는 그 폰트변경요소들) + 마우스 오버 되면
          function(){$("#pt_detail").addClass('select');
                   //select가 추가됨 (이 때, 첫번째bottom- pt_tile / 두번째-pt_detail) 연결해야하는데 얘도   
                                                                    //1)함수로 만들면 입력변수로 조절 2)부모자식요소로 접근 (위에처럼)  3)세개! 수작업 헤헤
                    editOption();                                    // editOption은 걍 위에 그 어제 해논 함수명 바꿔가지고 ! 그거 실행됨
                    },             
          function(){$("#pt_detail").removeClass('select'); }                 //  마우스아웃 때, select 제거! 
      ); 
      
      $('.numb3 .top').on('click', function(){                                  //bottom은 아래 생기는 흰 박스 (내부에는 그 폰트변경요소들) + 마우스 오버 되면
        $("#pt_address").addClass('select');                                    //select가 추가됨 (이 때, 첫번째bottom- pt_tile / 두번째-pt_detail) 연결해야하는데 얘도   
                                                                                //1)함수로 만들면 입력변수로 조절 2)부모자식요소로 접근 (위에처럼)  3)세개! 수작업 헤헤
                    editOption();                                               // editOption은 걍 위에 그 어제 해논 함수명 바꿔가지고 ! 그거 실행됨
        $("#pt_address").removeClass('select');   
        
      });
     
     

      
// 밍.. numb3는 address에 추가해논 class값 / address를 기준으로 실행시켜보면, 마우스오버에 따라 select 클래스가 추가/제거되는 거는 작동을 하는데,
// address에 나타난 버튼에 의해서는 변화가 안 나타남 ㅠㅠ
// 그리고, 마우스아웃돼서 select 클래스가 없어져도! title (맨위에) 클릭 시 나타나는 버튼에 의해서 변동이 됨 ㅋㅋㅋㅋㅋ
//          아마 이건 이 위에서 addClass하고 바로 editOption을 실행시켜서, 그 어제 우리 문제겪었떤거처럼 얘는 또 바로 클래스가 있는 상태로 인식하고 없어진건 인식못하고 그래서 이러는듯?
      
  });
    </script>
</head>
<script>
  <%for ind in 0..3 %>
          $(".text_input:eq(<%=ind%>)").keyup(function(){
              $('.text_content:eq(<%=ind%>)').empty();
              $('.text_content:eq(<%=ind%>)').append("div"+$(".text_input:eq(<%=ind%>)").val()+"</div>");
          });
        <% end %>
</script>


<div class="parent">
  <div class="child">
      <header>
        <h1>Make Your Poster</h1>
      </header>
      
      <div class="input_form row">
        
          <div class="numb1 form-group box"> <!-- form group은 한 줄 / for inline은 같은 줄 -->
              <label class="sr-only" for="title">Title</label>
              <input type="text" class="top form-control" id="title" placeholder="Title" name="title" autocomplete="off">
              <div class="bottom">
                  <%= render "option" %>
              </div>
          </div>
        
          <div class="numb2 form-group box">
              <label class="sr-only" for="detail">Detail</label>
              <textarea type="text" class="top form-control" id="detail" placeholder="Detail" name="detail" autocomplete="off"></textarea>
              <div class="bottom">
                  <%= render "option" %>
              </div>
          </div>
          
          <div class="numb3 form-group box">
              <label class="sr-only" for="address">Address</label>
              <input type="text" class="top form-control" id="address" placeholder="Address" name="address" autocomplete="off">
              <div class="bottom">
                  <%= render "option" %>
              </div>
          </div>
          
          <div class="form-group">
               <label class="sr-only" for="pic">pic</label>
                <%= simple_form_for @hpost,remote:true, html: {multipart: true} do |f| %>
                  <div class="field">
                      <%= f.input :picture, as: :file %>
                      <%= f.hidden_field :picture_cache %>
                  </div>
                <%= f.hidden_field :htmltag ,value:"",id:"htmltag" %>
                  <br>
                  <div class="actions">
                    <%= f.submit value:"헤헿" ,id:"submit_poster" %>
                  </div>
                <% end %>
           </div>
         
      </div> <!-- input_form row -->
  </div> <!-- child -->
    
  <!-- 오른쪽 poster -->
  <div class="child" id="here">
    <div class="poster" id="html-content-holder"> 
        <div id = "pt_title">
        </div>
        
        <div id = "pt_picture">
           <form runat="server">
            <img id="pt_picture_input" src="#"/>
           </form>
        </div>
          
        <div id = "pt_detail">
        </div>
        
        <div id = "pt_address">
        </div>
    </div>
  
    <a id="btn-Convert-Html2Image" href="#" >이미지 저장</a>
    <button type="submit" class="btn-EditSubmit">Submit</button>
  </div> <!-- child -->

</div>  <!-- parent / end -->

